#!/usr/bin/env python3

from tryalgo import dijkstra

graph = [[1, 3],
         [0, 2, 3],
         [1, 4, 5],
         [0, 1, 5, 6],
         [2, 7],
         [2, 3, 7, 8],
         [3, 8, 9],
         [4, 5, 10],
         [5, 6, 10],
         [6, 11],
         [7, 8],
         [9]]

_ = None
#           0  1  2  3  4  5  6  7  8  9 10 11
weights = [[_, 1, _, 4, _, _, _, _, _, _, _, _],  # 0
           [1, _, 1, 3, _, _, _, _, _, _, _, _],  # 1
           [_, 1, _, _, 3, 8, _, _, _, _, _, _],  # 2
           [4, 3, _, _, _, 2, 2, _, _, _, _, _],  # 3
           [_, _, 3, _, _, _, _, 1, _, _, _, _],  # 4
           [_, _, 8, 2, _, _, _, 2, 7, _, _, _],  # 5
           [_, _, _, 2, _, _, _, _, 3, 2, _, _],  # 6
           [_, _, _, _, 1, 2, _, _, _, _, 3, _],  # 7
           [_, _, _, _, _, 7, 3, _, _, _, 2, _],  # 8
           [_, _, _, _, _, _, 2, _, _, _, _, 1],  # 9
           [_, _, _, _, _, _, _, 3, 2, _, _, _],  # 10
           [_, _, _, _, _, _, _, _, _, 1, _, _]]  # 11

dist, prec = dijkstra(graph, weights, source=0)

node = 10
print(dist[10])  # Will print 9, the distance from node 0 to node 10
path = [node]
while prec[node] is not None:
    node = prec[node]
    path.append(node)
print(path[::-1])  # Will print [0, 1, 2, 4, 7, 10], a shortest path from 0 to 10

sparse = [{1: 1, 3: 4}, {0: 1, 2: 1, 3: 3}, {1: 1, 4: 3, 5: 8}, {0: 4, 1: 3, 5: 2, 6: 2}, {2: 3, 7: 1},
          {2: 8, 3: 2, 7: 2, 8: 7}, {3: 2, 8: 3, 9: 2}, {4: 1, 5: 2, 10: 3}, {5: 7, 6: 3, 10: 2}, {6: 2, 11: 1},
          {7: 3, 8: 2}, {9: 1}]

dist, prec = dijkstra(sparse, sparse, source=0)
print(dist, prec)